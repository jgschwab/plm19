1a.
An association list is a list of pairs. It keeps track of the association between the two elements in the pair. (x . y) pairs

1b.
The assoc function searches an association list for an association with the given key. It returns the first instance of association for that key. (?)

1c.
The function mapcan takes a function and one or more lists. It applies the function to elements with matching indexes. The results are concatenated to form the result.

1d. Give a small example of using LISP hash tables to (1) create a
hash table then (2) write something into that hash table then (3)
read that value back.

>    (setq hashTable (make-hash-table))
#S(HASH-TABLE :TEST FASTHASH-EQL)
>    (setf (gethash 'key1 hashTable) 'value1)
VALUE1
>    (gethash 'key1 hashTable)
VALUE1 ;
T


1e What does the LISP "sublis" function do? Give
an example..

sublis is a bit like 'find-and-replace' for lisp structures (linked cons cells).
It takes as parameters an association list (a list of key-value pairs) and a
lisp structure to perform the replacements in. Any keys in the parameterized
association list that are found in the parameterized lisp structure are replaced
with the value for the corresponding key in the former. For example:

>   (sublis '((foo . 42) (bar . 69)) '(myfunc foo bar))
--> (MYFUNC 42 69)


1f. In Prolog, what is the role of the bindings variable "binds".

It binds a value to a variable. Binding is used often when determining
truth of a query, where there is a variable in a rule for which a
value has not been found that satisfies the rule. When a value is
indeed found, it is bound to the variable.

1g.
The equals rule works as a case of unification. If x can be unified to x, it must be equal to x.

1h.
Gensym returns a symbol that is guaranteed to be unique. Gensym with the string "?" uses a question mark as a prefix for that unique symbol.

1i.
Variable renaming is required to avoid name conflicts between rules. Without renaming, there is no restriction against accessing bindings intended for another scope. Renaming makes recursion possible.
